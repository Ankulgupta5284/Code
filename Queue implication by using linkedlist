//queue using linkedlist
#include<iostream>
using namespace std;
class node{
	public:
	int val;
	node * next;
	node(int data){
		this->val=data;
		this->next=NULL;
		}	
	};
	class queue{
		 node * head;
		 public:
		 queue(){
		 	head=NULL;
		 }
		 void push(int data){
		 	node * new_head=new node(data);
		 	if(this->head==NULL){
		 		this->head=new_head;
		 	}
		 	else{
		 		node *rear=head;
		 		while(rear->next!=NULL){
		 			rear=rear->next;
		 		}
		 		rear->next=new_head;
		 		rear=new_head;
		 	}
		 }
		void pop(){
		if(this->head==NULL){
			cout<<"queue is empty";
			return;
		}
		else{
			node *temp=head;
			head=head->next;
			delete(temp);
			}
		}
		int getfront(){
				if(this->head==NULL){
			cout<<"queue is empty";
			return -1;
		}
		else{
			return head->val;
		}
			
			}
			int size(){
				if(this->head==NULL){
					return 0;
				}
				else{
				int k=1;
				node *temp=head;
				while(temp->next!=NULL){
					temp=temp->next;
					k++;
					}
					return k;
				}
			}
		
		};
int main(){	
	queue *head=new queue();
	head->push(3);
	head->push(4);
	head->push(5);
	int s=head->size();
for(int i=1;i<=s;i++){
	cout<<head->getfront()<<"  ";
	head->pop();
	}
	

return 0;	
	}
